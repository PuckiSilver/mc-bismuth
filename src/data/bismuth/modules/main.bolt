
from bismuth:items import catalyst, spell

append function_tag load:load { "values": [ "bismuth:load" ] }

function bismuth:load:
    schedule function bismuth:tick 1t replace
    schedule function bismuth:cool_down/clear 300s replace
    
    scoreboard objectives add bismuth dummy
    scoreboard players set #2 bismuth 2
    scoreboard players set #16384 bismuth 16384
    scoreboard players set #12000 bismuth 12000
    scoreboard objectives add bismuth.charge dummy
    scoreboard objectives add bismuth.prev_charge dummy

function bismuth:tick:
    schedule function bismuth:tick 1t replace
    
    execute store result score .gametime bismuth run time query gametime
    execute as @a[scores={bismuth.charge=1..}] run function bismuth:charge/tick

function bismuth:charge/tick:
    scoreboard players add @s bismuth.prev_charge 1

    scoreboard players reset .this_spell_id bismuth
    execute if score .gametime bismuth > @s magn.cd_until.mainhand
        unless score @s bismuth.charge = @s bismuth.prev_charge
        store result score .this_spell_id bismuth
        run data get entity @s SelectedItem.tag.magn.spell_id
    execute if score .this_spell_id bismuth = @s magn.spell_id.mainhand
        run function bismuth:charge/branch:
            scoreboard players operation .spell_id bismuth = @s magn.spell_id.mainhand
            scoreboard players set .finished bismuth 1
            function #bismuth:spell_dictionary
            scoreboard players reset @s bismuth.prev_charge
            scoreboard players reset @s bismuth.charge

function bismuth:hold_catalyst:
    tag @s remove bismuth.catalyst
    execute if data storage tungsten:player Item.tag."bismuth.catalyst" run tag @s add bismuth.catalyst

append function_tag tungsten:swap/offhand {"values":["bismuth:hold_catalyst"]}

advancement bismuth:use_spell
    {
    "criteria": {
        "requirement": {
        "trigger": "minecraft:using_item",
        "conditions": {
            "player": [
                { "condition": "minecraft:inverted", "term": { "condition": "minecraft:value_check",
                    "value": { "type": "minecraft:score", "target": { "type": "minecraft:fixed", "name": ".gametime" }, "score": "bismuth" },
                    "range": {
                        "min": -2147483648,
                        "max": { "type": "minecraft:score", "target": "this", "score": "magn.cd_until.mainhand" } } } },
                { "condition": "minecraft:inverted", "term": { "condition": "minecraft:value_check",
                    "value": { "type": "minecraft:score", "target": "this", "score": "magn.spell_id.mainhand" },
                    "range": 0 } },
                { "condition": "minecraft:entity_properties", "entity": "this",
                    "predicate": { "nbt": "{Tags:[\"bismuth.catalyst\"]}" } }
            ],
            "item": { "items": [ "minecraft:ender_eye" ] }
        }}},
    "rewards": { "function": "bismuth:use_spell" }
    }

function bismuth:use_spell:
    advancement revoke @s only bismuth:use_spell

    execute unless score @s bismuth.charge matches 1.. run scoreboard players reset @s bismuth.prev_charge
    scoreboard players add @s bismuth.charge 1
    scoreboard players set .finished bismuth 0

    execute store result score .this_spell_id bismuth run data get entity @s SelectedItem.tag.magn.spell_id
    scoreboard players operation .spell_id bismuth = @s magn.spell_id.mainhand

    execute if score .this_spell_id bismuth = .spell_id bismuth run function #bismuth:spell_dictionary

function_tag bismuth:spell_dictionary {"values":[]}
append function_tag bismuth:spell_dictionary {"values":["bismuth:template_spell_dictionary"]}

function bismuth:template_spell_dictionary:
    execute if score .spell_id bismuth matches 1000 run function bismuth:spell/1000/testing_spell:
        say PEW PEW SPELL 1000 PEW PEW
        scoreboard players set .cooldown bismuth 116
        function bismuth:cool_down/set
    execute if score .spell_id bismuth matches 1002 run function bismuth:spell/1002/testing_spell:
        if score .finished bismuth matches 0 run say Charging
        if score .finished bismuth matches 1 run say PAPAPEWWWW
        if score .finished bismuth matches 1 run scoreboard players set .cooldown bismuth 116
        if score .finished bismuth matches 1 run function bismuth:cool_down/set
    execute if score .spell_id bismuth matches 1003 if score @s bismuth.charge matches 100.. run function bismuth:spell/1003/max_charge:
        say charged 5 seconds
        scoreboard players set .cooldown bismuth 116
        function bismuth:cool_down/set
    execute if score .spell_id bismuth matches 1003 unless score @s bismuth.charge matches 100.. if score .finished bismuth matches 1 run function bismuth:spell/1003/break_charge:
        say stopped in charge
        scoreboard players set .cooldown bismuth 29
        function bismuth:cool_down/set

function bismuth:cool_down/set:
    # SET:  .cooldown bismuth => base cooldown
    # IN:   @s magn.spell_haste
    #       .gametime bismuth

    # cd_div = ( 100 + spell_haste )
    scoreboard players set .cd_div bismuth 100
    scoreboard players operation .cd_div bismuth += @s magn.spell_haste

    # cd_until = ( ( cooldown * 100 ) / cd_div ) + gametime
    # with rounding
    scoreboard players set .cd_until bismuth 100
    scoreboard players operation .cd_until bismuth *= .cooldown bismuth
    scoreboard players operation .cd_until bismuth += .cd_until bismuth
    scoreboard players operation .cd_until bismuth /= .cd_div bismuth
    scoreboard players operation #temp bismuth = .cd_until bismuth
    scoreboard players operation .cd_until bismuth /= #2 bismuth
    scoreboard players operation #temp bismuth %= #2 bismuth
    scoreboard players operation .cd_until bismuth += #temp bismuth
    scoreboard players operation .cd_until bismuth += .gametime bismuth

    # cd_tint_upper = ( 100_000 / cd_div ) * 16384
    # with rounding
    scoreboard players set .cd_tint_upper bismuth 200000
    scoreboard players operation .cd_tint_upper bismuth /= .cd_div bismuth
    scoreboard players operation #temp bismuth = .cd_tint_upper bismuth
    scoreboard players operation .cd_tint_upper bismuth /= #2 bismuth
    scoreboard players operation #temp bismuth %= #2 bismuth
    scoreboard players operation .cd_tint_upper bismuth += #temp bismuth
    scoreboard players operation .cd_tint_upper bismuth *= #16384 bismuth

    # cd_tint += ( cd_until / 2 ) + cd_tint_upper
    scoreboard players operation .cd_tint bismuth = .cd_until bismuth
    scoreboard players operation .cd_tint bismuth /= #2 bismuth
    scoreboard players operation .cd_tint bismuth %= #12000 bismuth
    scoreboard players operation .cd_tint bismuth += .cd_tint_upper bismuth

    data remove storage bismuth:cd item
    execute store result storage bismuth:cd item.tag.magn.cd_until int 1 run scoreboard players get .cd_until bismuth
    execute store result storage bismuth:cd item.tag.display.color int 1 run scoreboard players get .cd_tint bismuth
    
    scoreboard players operation @s magn.cd_until -= @s magn.cd_until.mainhand
    scoreboard players operation @s magn.cd_until.mainhand = .cd_until bismuth
    scoreboard players operation @s magn.cd_until += @s magn.cd_until.mainhand

    scoreboard players reset @s bismuth.charge
    item modify entity @s weapon.mainhand bismuth:set_cool_down

item_modifier bismuth:set_cool_down {
        "function": "minecraft:copy_nbt",
        "source": {
            "type": "minecraft:storage",
            "source": "bismuth:cd" },
        "ops": [ {
            "source": "item.tag",
            "target": "{}",
            "op": "merge" }
    ]}

function bismuth:cool_down/clear:
    schedule function bismuth:cool_down/clear 300s replace
    execute as @a run function bismuth:cool_down/clear_self

function bismuth:cool_down/clear_self:
    for i in range(9):
        execute store result score #cd_until bismuth run data get entity @s f'Inventory[{{Slot:{i}b}}].tag.magn.cd_until'
        execute unless score #cd_until bismuth matches 0 if score .gametime bismuth > #cd_until bismuth run item modify entity @s f'hotbar.{i}' bismuth:clear_cool_down
    for i in range(27):
        execute store result score #cd_until bismuth run data get entity @s f'Inventory[{{Slot:{i+9}b}}].tag.magn.cd_until'
        execute unless score #cd_until bismuth matches 0 if score .gametime bismuth > #cd_until bismuth run item modify entity @s f'inventory.{i}' bismuth:clear_cool_down

item_modifier bismuth:clear_cool_down {
        "function": "minecraft:set_nbt",
        "tag": "{display:{color:16777215},magn:{cd_until:0}}"
    }
